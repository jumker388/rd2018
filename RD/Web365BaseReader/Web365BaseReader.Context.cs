//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web365BaseReader
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Web365BaseReaderEntities : DbContext
    {
        public Web365BaseReaderEntities()
            : base("name=Web365BaseReaderEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ReportSumMoney> ReportSumMoney { get; set; }
        public DbSet<ReportSumMoney2> ReportSumMoney2 { get; set; }
        public DbSet<ReportSumMoneyInHour> ReportSumMoneyInHour { get; set; }
        public DbSet<tblAdverties_Picture_Map> tblAdverties_Picture_Map { get; set; }
        public DbSet<tblAdvertise> tblAdvertise { get; set; }
        public DbSet<tblArticle> tblArticle { get; set; }
        public DbSet<tblArticleAuto> tblArticleAuto { get; set; }
        public DbSet<tblComment> tblComment { get; set; }
        public DbSet<tblContact> tblContact { get; set; }
        public DbSet<tblCustomer> tblCustomer { get; set; }
        public DbSet<tblDetail> tblDetail { get; set; }
        public DbSet<tblDistributor> tblDistributor { get; set; }
        public DbSet<tblDomain> tblDomain { get; set; }
        public DbSet<tblFile> tblFile { get; set; }
        public DbSet<tblGameConfigLogs> tblGameConfigLogs { get; set; }
        public DbSet<tblGameLogsDetail> tblGameLogsDetail { get; set; }
        public DbSet<tblGameLogsMoney> tblGameLogsMoney { get; set; }
        public DbSet<tblGoogleMessage> tblGoogleMessage { get; set; }
        public DbSet<tblGroup_Article_Map> tblGroup_Article_Map { get; set; }
        public DbSet<tblGroup_TypeArticle_Map> tblGroup_TypeArticle_Map { get; set; }
        public DbSet<tblGroupArticle> tblGroupArticle { get; set; }
        public DbSet<tblGroupTypeArticle> tblGroupTypeArticle { get; set; }
        public DbSet<tblLanguage> tblLanguage { get; set; }
        public DbSet<tblLayoutContent> tblLayoutContent { get; set; }
        public DbSet<tblManufacturer> tblManufacturer { get; set; }
        public DbSet<tblMenu> tblMenu { get; set; }
        public DbSet<tblOrder> tblOrder { get; set; }
        public DbSet<tblOrder_Shipping> tblOrder_Shipping { get; set; }
        public DbSet<tblOrder_Status> tblOrder_Status { get; set; }
        public DbSet<tblOrderDetail> tblOrderDetail { get; set; }
        public DbSet<tblPage> tblPage { get; set; }
        public DbSet<tblPicture> tblPicture { get; set; }
        public DbSet<tblProduct> tblProduct { get; set; }
        public DbSet<tblProduct_Attribute_Map> tblProduct_Attribute_Map { get; set; }
        public DbSet<tblProduct_Status_Map> tblProduct_Status_Map { get; set; }
        public DbSet<tblProduct_Variant> tblProduct_Variant { get; set; }
        public DbSet<tblProductAttribute> tblProductAttribute { get; set; }
        public DbSet<tblProductFilter> tblProductFilter { get; set; }
        public DbSet<tblProductGroupAttribute> tblProductGroupAttribute { get; set; }
        public DbSet<tblProductLabel> tblProductLabel { get; set; }
        public DbSet<tblProductStatus> tblProductStatus { get; set; }
        public DbSet<tblProductType_Group_Map> tblProductType_Group_Map { get; set; }
        public DbSet<tblProductTypeGroup> tblProductTypeGroup { get; set; }
        public DbSet<tblReceiveInfo> tblReceiveInfo { get; set; }
        public DbSet<tblReceiveInfoGroup> tblReceiveInfoGroup { get; set; }
        public DbSet<tblSupport> tblSupport { get; set; }
        public DbSet<tblTags> tblTags { get; set; }
        public DbSet<tblTags_Mapping_News> tblTags_Mapping_News { get; set; }
        public DbSet<tblTypeArticle> tblTypeArticle { get; set; }
        public DbSet<tblTypeComment> tblTypeComment { get; set; }
        public DbSet<tblTypeFile> tblTypeFile { get; set; }
        public DbSet<tblTypeLog> tblTypeLog { get; set; }
        public DbSet<tblTypePicture> tblTypePicture { get; set; }
        public DbSet<tblTypeProduct> tblTypeProduct { get; set; }
        public DbSet<tblTypeSupport> tblTypeSupport { get; set; }
        public DbSet<ThongKePOC> ThongKePOC { get; set; }
        public DbSet<UserProfile> UserProfile { get; set; }
        public DbSet<webpages_Membership> webpages_Membership { get; set; }
        public DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public DbSet<webpages_Roles> webpages_Roles { get; set; }
    
        public virtual ObjectResult<string> POC_CreateChiPhi(string ten, Nullable<decimal> tien, string noidung)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var tienParameter = tien.HasValue ?
                new ObjectParameter("tien", tien) :
                new ObjectParameter("tien", typeof(decimal));
    
            var noidungParameter = noidung != null ?
                new ObjectParameter("noidung", noidung) :
                new ObjectParameter("noidung", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("POC_CreateChiPhi", tenParameter, tienParameter, noidungParameter);
        }
    
        public virtual ObjectResult<POC_GetDetailGameHistory_Result> POC_GetDetailGameHistory(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_GetDetailGameHistory_Result>("POC_GetDetailGameHistory", idParameter);
        }
    
        public virtual int POC_GetDetailThongKePocChiPhi(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POC_GetDetailThongKePocChiPhi", idParameter);
        }
    
        public virtual int POC_GetGameHistory(Nullable<int> uid, Nullable<int> gameid, Nullable<int> mathid, Nullable<int> currentRecord, Nullable<int> numberRecord, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var gameidParameter = gameid.HasValue ?
                new ObjectParameter("gameid", gameid) :
                new ObjectParameter("gameid", typeof(int));
    
            var mathidParameter = mathid.HasValue ?
                new ObjectParameter("mathid", mathid) :
                new ObjectParameter("mathid", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POC_GetGameHistory", uidParameter, gameidParameter, mathidParameter, currentRecordParameter, numberRecordParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int POC_GetGameHistoryMoney(Nullable<int> uid, Nullable<int> gameid, Nullable<int> currentRecord, Nullable<int> numberRecord, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var gameidParameter = gameid.HasValue ?
                new ObjectParameter("gameid", gameid) :
                new ObjectParameter("gameid", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POC_GetGameHistoryMoney", uidParameter, gameidParameter, currentRecordParameter, numberRecordParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int POC_GetGameHistoryTaiXiu(Nullable<int> uid, Nullable<int> gameid, Nullable<int> mathid, Nullable<int> currentRecord, Nullable<int> numberRecord, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var gameidParameter = gameid.HasValue ?
                new ObjectParameter("gameid", gameid) :
                new ObjectParameter("gameid", typeof(int));
    
            var mathidParameter = mathid.HasValue ?
                new ObjectParameter("mathid", mathid) :
                new ObjectParameter("mathid", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POC_GetGameHistoryTaiXiu", uidParameter, gameidParameter, mathidParameter, currentRecordParameter, numberRecordParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int POC_GetHopThu(Nullable<int> currentRecord, Nullable<int> numberRecord, string key, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POC_GetHopThu", currentRecordParameter, numberRecordParameter, keyParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<POC_GetListDaiLy_Result> POC_GetListDaiLy(Nullable<int> level, Nullable<int> currentRecord, Nullable<int> numberRecord)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_GetListDaiLy_Result>("POC_GetListDaiLy", levelParameter, currentRecordParameter, numberRecordParameter);
        }
    
        public virtual ObjectResult<POC_GetListGiftCode_Result> POC_GetListGiftCode(Nullable<int> used, Nullable<int> skip, Nullable<int> take)
        {
            var usedParameter = used.HasValue ?
                new ObjectParameter("used", used) :
                new ObjectParameter("used", typeof(int));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var takeParameter = take.HasValue ?
                new ObjectParameter("take", take) :
                new ObjectParameter("take", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_GetListGiftCode_Result>("POC_GetListGiftCode", usedParameter, skipParameter, takeParameter);
        }
    
        public virtual ObjectResult<POC_GetListGiftCodeByTurnID_Result> POC_GetListGiftCodeByTurnID(Nullable<int> turn)
        {
            var turnParameter = turn.HasValue ?
                new ObjectParameter("turn", turn) :
                new ObjectParameter("turn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_GetListGiftCodeByTurnID_Result>("POC_GetListGiftCodeByTurnID", turnParameter);
        }
    
        public virtual ObjectResult<POC_GetListGiftCodeTurn_Result> POC_GetListGiftCodeTurn(Nullable<int> used, Nullable<int> skip, Nullable<int> take)
        {
            var usedParameter = used.HasValue ?
                new ObjectParameter("used", used) :
                new ObjectParameter("used", typeof(int));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var takeParameter = take.HasValue ?
                new ObjectParameter("take", take) :
                new ObjectParameter("take", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_GetListGiftCodeTurn_Result>("POC_GetListGiftCodeTurn", usedParameter, skipParameter, takeParameter);
        }
    
        public virtual ObjectResult<POC_GetListGiftType_Result> POC_GetListGiftType(Nullable<int> currentRecord, Nullable<int> numberRecord)
        {
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_GetListGiftType_Result>("POC_GetListGiftType", currentRecordParameter, numberRecordParameter);
        }
    
        public virtual int POC_GetReportCCU(string fdate, string tdate)
        {
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POC_GetReportCCU", fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<POC_GetReportCCUOneDay_Result> POC_GetReportCCUOneDay(string fdate)
        {
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_GetReportCCUOneDay_Result>("POC_GetReportCCUOneDay", fdateParameter);
        }
    
        public virtual int POC_GetReportGame(Nullable<int> gameId, Nullable<int> source, string fdate, string tdate)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POC_GetReportGame", gameIdParameter, sourceParameter, fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<POC_GetReportGameOneDay_Result> POC_GetReportGameOneDay(Nullable<int> gameId, Nullable<int> source, string fdate)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_GetReportGameOneDay_Result>("POC_GetReportGameOneDay", gameIdParameter, sourceParameter, fdateParameter);
        }
    
        public virtual int POC_InserLogsAdmin(string content)
        {
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POC_InserLogsAdmin", contentParameter);
        }
    
        public virtual int POC_ListPlayer(string username, Nullable<int> userId, Nullable<int> currentRecord, Nullable<int> numberRecord)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POC_ListPlayer", usernameParameter, userIdParameter, currentRecordParameter, numberRecordParameter);
        }
    
        public virtual ObjectResult<POC_ThongKePoc_Result> POC_ThongKePoc(Nullable<int> currentPage, Nullable<int> numberRecord, Nullable<int> currentRecord)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("currentPage", currentPage) :
                new ObjectParameter("currentPage", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_ThongKePoc_Result>("POC_ThongKePoc", currentPageParameter, numberRecordParameter, currentRecordParameter);
        }
    
        public virtual ObjectResult<POC_ThongKePocChiPhi_Result> POC_ThongKePocChiPhi(Nullable<int> currentPage, Nullable<int> numberRecord, Nullable<int> currentRecord)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("currentPage", currentPage) :
                new ObjectParameter("currentPage", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_ThongKePocChiPhi_Result>("POC_ThongKePocChiPhi", currentPageParameter, numberRecordParameter, currentRecordParameter);
        }
    
        public virtual ObjectResult<POC_ThongKePocInHour_Result> POC_ThongKePocInHour(Nullable<int> currentPage, Nullable<int> numberRecord, Nullable<int> currentRecord)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("currentPage", currentPage) :
                new ObjectParameter("currentPage", typeof(int));
    
            var numberRecordParameter = numberRecord.HasValue ?
                new ObjectParameter("numberRecord", numberRecord) :
                new ObjectParameter("numberRecord", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("currentRecord", currentRecord) :
                new ObjectParameter("currentRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POC_ThongKePocInHour_Result>("POC_ThongKePocInHour", currentPageParameter, numberRecordParameter, currentRecordParameter);
        }
    
        public virtual ObjectResult<string> POC_UpdatePlayerInfo(Nullable<int> userId, Nullable<decimal> poc, Nullable<decimal> ket, string mobile)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var pocParameter = poc.HasValue ?
                new ObjectParameter("poc", poc) :
                new ObjectParameter("poc", typeof(decimal));
    
            var ketParameter = ket.HasValue ?
                new ObjectParameter("ket", ket) :
                new ObjectParameter("ket", typeof(decimal));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("POC_UpdatePlayerInfo", userIdParameter, pocParameter, ketParameter, mobileParameter);
        }
    
        public virtual int PRC_AdminGetListDailyCap1(string fDate, string tDate, string key, Nullable<int> currentPage, Nullable<int> pageSize, ObjectParameter total)
        {
            var fDateParameter = fDate != null ?
                new ObjectParameter("fDate", fDate) :
                new ObjectParameter("fDate", typeof(string));
    
            var tDateParameter = tDate != null ?
                new ObjectParameter("tDate", tDate) :
                new ObjectParameter("tDate", typeof(string));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("currentPage", currentPage) :
                new ObjectParameter("currentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_AdminGetListDailyCap1", fDateParameter, tDateParameter, keyParameter, currentPageParameter, pageSizeParameter, total);
        }
    
        public virtual int PRC_AdminGetListDailyCap2(string parentName, string fDate, string tDate, string key, Nullable<int> currentPage, Nullable<int> pageSize, ObjectParameter total)
        {
            var parentNameParameter = parentName != null ?
                new ObjectParameter("parentName", parentName) :
                new ObjectParameter("parentName", typeof(string));
    
            var fDateParameter = fDate != null ?
                new ObjectParameter("fDate", fDate) :
                new ObjectParameter("fDate", typeof(string));
    
            var tDateParameter = tDate != null ?
                new ObjectParameter("tDate", tDate) :
                new ObjectParameter("tDate", typeof(string));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("currentPage", currentPage) :
                new ObjectParameter("currentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_AdminGetListDailyCap2", parentNameParameter, fDateParameter, tDateParameter, keyParameter, currentPageParameter, pageSizeParameter, total);
        }
    
        public virtual ObjectResult<PRC_AllChildTypeNews_Result> PRC_AllChildTypeNews(string categoryAscii)
        {
            var categoryAsciiParameter = categoryAscii != null ?
                new ObjectParameter("CategoryAscii", categoryAscii) :
                new ObjectParameter("CategoryAscii", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_AllChildTypeNews_Result>("PRC_AllChildTypeNews", categoryAsciiParameter);
        }
    
        public virtual ObjectResult<PRC_AllChildTypeNewsByArrID_Result> PRC_AllChildTypeNewsByArrID(string listID)
        {
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_AllChildTypeNewsByArrID_Result>("PRC_AllChildTypeNewsByArrID", listIDParameter);
        }
    
        public virtual int PRC_BlockUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_BlockUser", userIdParameter);
        }
    
        public virtual int PRC_ChecktOTP(string username, Nullable<int> type, string otp)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_ChecktOTP", usernameParameter, typeParameter, otpParameter);
        }
    
        public virtual ObjectResult<PRC_CheckUserInMember_Result> PRC_CheckUserInMember(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_CheckUserInMember_Result>("PRC_CheckUserInMember", userNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PRC_DeleteDetailGameGiftType(Nullable<int> id, Nullable<bool> isDelete)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRC_DeleteDetailGameGiftType", idParameter, isDeleteParameter);
        }
    
        public virtual ObjectResult<PRC_GetDetailGameGiftType_Result> PRC_GetDetailGameGiftType(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_GetDetailGameGiftType_Result>("PRC_GetDetailGameGiftType", idParameter);
        }
    
        public virtual ObjectResult<PRC_GetDetailPlayer_Result> PRC_GetDetailPlayer(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_GetDetailPlayer_Result>("PRC_GetDetailPlayer", userNameParameter);
        }
    
        public virtual ObjectResult<PRC_GetDetailPlayerNickName_Result> PRC_GetDetailPlayerNickName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_GetDetailPlayerNickName_Result>("PRC_GetDetailPlayerNickName", userNameParameter);
        }
    
        public virtual ObjectResult<PRC_GetInfoMoneyInKetSat_Result> PRC_GetInfoMoneyInKetSat(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_GetInfoMoneyInKetSat_Result>("PRC_GetInfoMoneyInKetSat", userNameParameter);
        }
    
        public virtual int PRC_GetInfoPlayerByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_GetInfoPlayerByUserId", userIdParameter);
        }
    
        public virtual int PRC_GetListDailyCap2(string parentName, string fDate, string tDate, string key, Nullable<int> currentPage, Nullable<int> pageSize, ObjectParameter total)
        {
            var parentNameParameter = parentName != null ?
                new ObjectParameter("parentName", parentName) :
                new ObjectParameter("parentName", typeof(string));
    
            var fDateParameter = fDate != null ?
                new ObjectParameter("fDate", fDate) :
                new ObjectParameter("fDate", typeof(string));
    
            var tDateParameter = tDate != null ?
                new ObjectParameter("tDate", tDate) :
                new ObjectParameter("tDate", typeof(string));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("currentPage", currentPage) :
                new ObjectParameter("currentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_GetListDailyCap2", parentNameParameter, fDateParameter, tDateParameter, keyParameter, currentPageParameter, pageSizeParameter, total);
        }
    
        public virtual int PRC_GetListNewsByType(Nullable<int> typeID, string typeAscii, Nullable<int> currentRecord, Nullable<int> pageSize, ObjectParameter total)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var typeAsciiParameter = typeAscii != null ?
                new ObjectParameter("TypeAscii", typeAscii) :
                new ObjectParameter("TypeAscii", typeof(string));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("CurrentRecord", currentRecord) :
                new ObjectParameter("CurrentRecord", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_GetListNewsByType", typeIDParameter, typeAsciiParameter, currentRecordParameter, pageSizeParameter, total);
        }
    
        public virtual ObjectResult<PRC_GetListNewsSearch_Result> PRC_GetListNewsSearch(string keyword, Nullable<int> currentRecord, Nullable<int> pageSize, ObjectParameter total)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("CurrentRecord", currentRecord) :
                new ObjectParameter("CurrentRecord", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_GetListNewsSearch_Result>("PRC_GetListNewsSearch", keywordParameter, currentRecordParameter, pageSizeParameter, total);
        }
    
        public virtual int PRC_GetLogsMoneyByUserName(string userName, Nullable<int> type, Nullable<int> currentPage, Nullable<int> pageSize, string key, Nullable<int> statusId, string fDate, string tDate, ObjectParameter total)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("currentPage", currentPage) :
                new ObjectParameter("currentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("statusId", statusId) :
                new ObjectParameter("statusId", typeof(int));
    
            var fDateParameter = fDate != null ?
                new ObjectParameter("fDate", fDate) :
                new ObjectParameter("fDate", typeof(string));
    
            var tDateParameter = tDate != null ?
                new ObjectParameter("tDate", tDate) :
                new ObjectParameter("tDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_GetLogsMoneyByUserName", userNameParameter, typeParameter, currentPageParameter, pageSizeParameter, keyParameter, statusIdParameter, fDateParameter, tDateParameter, total);
        }
    
        public virtual int PRC_GetLogsPoc(string nickSend, string nickRecive, Nullable<int> id, Nullable<int> currentPage, Nullable<int> pageSize, ObjectParameter total)
        {
            var nickSendParameter = nickSend != null ?
                new ObjectParameter("nickSend", nickSend) :
                new ObjectParameter("nickSend", typeof(string));
    
            var nickReciveParameter = nickRecive != null ?
                new ObjectParameter("nickRecive", nickRecive) :
                new ObjectParameter("nickRecive", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("currentPage", currentPage) :
                new ObjectParameter("currentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_GetLogsPoc", nickSendParameter, nickReciveParameter, idParameter, currentPageParameter, pageSizeParameter, total);
        }
    
        public virtual ObjectResult<PRC_GetMenu_Result> PRC_GetMenu(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_GetMenu_Result>("PRC_GetMenu", userIdParameter);
        }
    
        public virtual int PRC_GetReportDaiLy(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_GetReportDaiLy", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PRC_InsertDetailGameGiftType(string name, Nullable<bool> isShow, Nullable<decimal> money)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var isShowParameter = isShow.HasValue ?
                new ObjectParameter("IsShow", isShow) :
                new ObjectParameter("IsShow", typeof(bool));
    
            var moneyParameter = money.HasValue ?
                new ObjectParameter("Money", money) :
                new ObjectParameter("Money", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRC_InsertDetailGameGiftType", nameParameter, isShowParameter, moneyParameter);
        }
    
        public virtual int PRC_InsertFilterForProduct(Nullable<int> productId, Nullable<int> filterId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var filterIdParameter = filterId.HasValue ?
                new ObjectParameter("FilterId", filterId) :
                new ObjectParameter("FilterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_InsertFilterForProduct", productIdParameter, filterIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PRC_InsertGiftTurn(Nullable<int> quantity, string prefix, Nullable<System.DateTime> dateExpired, Nullable<int> typeID, string note)
        {
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var dateExpiredParameter = dateExpired.HasValue ?
                new ObjectParameter("DateExpired", dateExpired) :
                new ObjectParameter("DateExpired", typeof(System.DateTime));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRC_InsertGiftTurn", quantityParameter, prefixParameter, dateExpiredParameter, typeIDParameter, noteParameter);
        }
    
        public virtual int PRC_InsertLabelForProduct(Nullable<int> productId, Nullable<int> labelId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var labelIdParameter = labelId.HasValue ?
                new ObjectParameter("LabelId", labelId) :
                new ObjectParameter("LabelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_InsertLabelForProduct", productIdParameter, labelIdParameter);
        }
    
        public virtual int PRC_InsertLogsGame(string userSend, string userRecive, Nullable<double> moneySend, Nullable<double> moneyRecive, Nullable<double> tax, Nullable<double> taxParent, Nullable<int> statusId, string note, Nullable<double> taxmoney, Nullable<double> taxParentMoney, Nullable<double> taxSystem, Nullable<double> taxSystemMoney)
        {
            var userSendParameter = userSend != null ?
                new ObjectParameter("userSend", userSend) :
                new ObjectParameter("userSend", typeof(string));
    
            var userReciveParameter = userRecive != null ?
                new ObjectParameter("userRecive", userRecive) :
                new ObjectParameter("userRecive", typeof(string));
    
            var moneySendParameter = moneySend.HasValue ?
                new ObjectParameter("moneySend", moneySend) :
                new ObjectParameter("moneySend", typeof(double));
    
            var moneyReciveParameter = moneyRecive.HasValue ?
                new ObjectParameter("moneyRecive", moneyRecive) :
                new ObjectParameter("moneyRecive", typeof(double));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("tax", tax) :
                new ObjectParameter("tax", typeof(double));
    
            var taxParentParameter = taxParent.HasValue ?
                new ObjectParameter("taxParent", taxParent) :
                new ObjectParameter("taxParent", typeof(double));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("statusId", statusId) :
                new ObjectParameter("statusId", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var taxmoneyParameter = taxmoney.HasValue ?
                new ObjectParameter("taxmoney", taxmoney) :
                new ObjectParameter("taxmoney", typeof(double));
    
            var taxParentMoneyParameter = taxParentMoney.HasValue ?
                new ObjectParameter("taxParentMoney", taxParentMoney) :
                new ObjectParameter("taxParentMoney", typeof(double));
    
            var taxSystemParameter = taxSystem.HasValue ?
                new ObjectParameter("taxSystem", taxSystem) :
                new ObjectParameter("taxSystem", typeof(double));
    
            var taxSystemMoneyParameter = taxSystemMoney.HasValue ?
                new ObjectParameter("taxSystemMoney", taxSystemMoney) :
                new ObjectParameter("taxSystemMoney", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_InsertLogsGame", userSendParameter, userReciveParameter, moneySendParameter, moneyReciveParameter, taxParameter, taxParentParameter, statusIdParameter, noteParameter, taxmoneyParameter, taxParentMoneyParameter, taxSystemParameter, taxSystemMoneyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PRC_InsertOFFMessenger(string nicknameSend, string nicknameRecive, string content)
        {
            var nicknameSendParameter = nicknameSend != null ?
                new ObjectParameter("nicknameSend", nicknameSend) :
                new ObjectParameter("nicknameSend", typeof(string));
    
            var nicknameReciveParameter = nicknameRecive != null ?
                new ObjectParameter("nicknameRecive", nicknameRecive) :
                new ObjectParameter("nicknameRecive", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRC_InsertOFFMessenger", nicknameSendParameter, nicknameReciveParameter, contentParameter);
        }
    
        public virtual ObjectResult<PRC_InsertOTP_Result> PRC_InsertOTP(string username, Nullable<int> type, string otp)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_InsertOTP_Result>("PRC_InsertOTP", usernameParameter, typeParameter, otpParameter);
        }
    
        public virtual int PRC_InsertPageForRole(Nullable<int> roleId, Nullable<int> pageId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_InsertPageForRole", roleIdParameter, pageIdParameter);
        }
    
        public virtual int PRC_InsertRoleForUser(Nullable<int> userId, Nullable<int> roleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_InsertRoleForUser", userIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<PRC_MenuByParentId_Result> PRC_MenuByParentId(string listID)
        {
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_MenuByParentId_Result>("PRC_MenuByParentId", listIDParameter);
        }
    
        public virtual ObjectResult<PRC_PortalUser_Result> PRC_PortalUser(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_PortalUser_Result>("PRC_PortalUser", userNameParameter);
        }
    
        public virtual ObjectResult<PRC_Product_GetAllChildTypeByParentID_Result> PRC_Product_GetAllChildTypeByParentID(Nullable<int> parent)
        {
            var parentParameter = parent.HasValue ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_Product_GetAllChildTypeByParentID_Result>("PRC_Product_GetAllChildTypeByParentID", parentParameter);
        }
    
        public virtual int PRC_RefundPoc(Nullable<int> id, Nullable<int> type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_RefundPoc", idParameter, typeParameter);
        }
    
        public virtual int PRC_ResetPictureProduct(Nullable<int> productID, string listID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_ResetPictureProduct", productIDParameter, listIDParameter);
        }
    
        public virtual int PRC_ResetPictureProductType(Nullable<int> typeID, string listID)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_ResetPictureProductType", typeIDParameter, listIDParameter);
        }
    
        public virtual int PRC_Role_UpdateTestTypeForQuestion(Nullable<int> questionID, string listTestTypeID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("QuestionID", questionID) :
                new ObjectParameter("QuestionID", typeof(int));
    
            var listTestTypeIDParameter = listTestTypeID != null ?
                new ObjectParameter("ListTestTypeID", listTestTypeID) :
                new ObjectParameter("ListTestTypeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_Role_UpdateTestTypeForQuestion", questionIDParameter, listTestTypeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PRC_SendMoneyKetSet(string userName, Nullable<decimal> moneySend)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var moneySendParameter = moneySend.HasValue ?
                new ObjectParameter("moneySend", moneySend) :
                new ObjectParameter("moneySend", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRC_SendMoneyKetSet", userNameParameter, moneySendParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PRC_SendToMessenger(string nicknameSend, string content)
        {
            var nicknameSendParameter = nicknameSend != null ?
                new ObjectParameter("nicknameSend", nicknameSend) :
                new ObjectParameter("nicknameSend", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRC_SendToMessenger", nicknameSendParameter, contentParameter);
        }
    
        public virtual ObjectResult<PRC_SetDaiLy_Result> PRC_SetDaiLy(string userName, Nullable<int> level, string parent)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var parentParameter = parent != null ?
                new ObjectParameter("parent", parent) :
                new ObjectParameter("parent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_SetDaiLy_Result>("PRC_SetDaiLy", userNameParameter, levelParameter, parentParameter);
        }
    
        public virtual ObjectResult<string> PRC_UnBlockUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PRC_UnBlockUser", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PRC_UpdateDetailGameGiftType(Nullable<int> id, string name, Nullable<bool> isShow, Nullable<decimal> money)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var isShowParameter = isShow.HasValue ?
                new ObjectParameter("IsShow", isShow) :
                new ObjectParameter("IsShow", typeof(bool));
    
            var moneyParameter = money.HasValue ?
                new ObjectParameter("Money", money) :
                new ObjectParameter("Money", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRC_UpdateDetailGameGiftType", idParameter, nameParameter, isShowParameter, moneyParameter);
        }
    
        public virtual ObjectResult<string> PRC_UpdateLevelDaiLy(string username, Nullable<int> level, string parent)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var parentParameter = parent != null ?
                new ObjectParameter("parent", parent) :
                new ObjectParameter("parent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PRC_UpdateLevelDaiLy", usernameParameter, levelParameter, parentParameter);
        }
    
        public virtual ObjectResult<PRC_UpdateLogsGameDetail_Result> PRC_UpdateLogsGameDetail(Nullable<int> logDetailId, Nullable<int> statusId, string note)
        {
            var logDetailIdParameter = logDetailId.HasValue ?
                new ObjectParameter("logDetailId", logDetailId) :
                new ObjectParameter("logDetailId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("statusId", statusId) :
                new ObjectParameter("statusId", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_UpdateLogsGameDetail_Result>("PRC_UpdateLogsGameDetail", logDetailIdParameter, statusIdParameter, noteParameter);
        }
    
        public virtual ObjectResult<string> PRC_UpdateLogsNoteLv2(string userParent, string userChil, string note)
        {
            var userParentParameter = userParent != null ?
                new ObjectParameter("userParent", userParent) :
                new ObjectParameter("userParent", typeof(string));
    
            var userChilParameter = userChil != null ?
                new ObjectParameter("userChil", userChil) :
                new ObjectParameter("userChil", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PRC_UpdateLogsNoteLv2", userParentParameter, userChilParameter, noteParameter);
        }
    
        public virtual int PRC_UpdateReportSumMoney()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_UpdateReportSumMoney");
        }
    
        public virtual int PRC_UpdateReportThongKeChiPhi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_UpdateReportThongKeChiPhi");
        }
    
        public virtual int PRC_UpdateReportThongKeChiPhiInHour()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_UpdateReportThongKeChiPhiInHour");
        }
    
        public virtual int PRC_UpdateTopVinhDanhGame()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_UpdateTopVinhDanhGame");
        }
    
        public virtual int PRC_UpdateTopWin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_UpdateTopWin");
        }
    
        public virtual ObjectResult<Nullable<int>> PRC_WithDrawMoneyKetSet(string userName, Nullable<decimal> moneySend)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var moneySendParameter = moneySend.HasValue ?
                new ObjectParameter("moneySend", moneySend) :
                new ObjectParameter("moneySend", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRC_WithDrawMoneyKetSet", userNameParameter, moneySendParameter);
        }
    }
}
